{"version":3,"sources":["typed.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_lodash","_optionalsJs","_optionalsJs2","Typed","elementId","options","el","document","getElementById","stringsElement","build","self","timeout","setTimeout","strings","sequence","shuffle","shuffleArray","elContent","isInput","contentType","innerHTML","textContent","typewrite","arrayPos","strPos","backspace","startDelay","showCursor","cursor","createElement","className","cursorChar","parentNode","insertBefore","nextSibling","style","display","Array","slice","apply","children","forEach","stringElement","push","init","curString","curStrPos","stop","fadeOut","classList","contains","fadeOutClass","remove","humanize","Math","round","random","typeSpeed","charPause","substr","charAt","skip","test","exec","parseInt","substring","curChar","tag","endTag","onStringTyped","callback","curLoop","loop","loopCount","backDelay","preStringTyped","nextString","attr","setAttribute","initFadeOut","backSpeed","replaceText","stopNum","fadeOutDelay","str","array","tmp","current","top","floor","clearInterval","getAttribute","removeChild","resetCallback","_defaultsJs","_defaultsJs2","Optionals","keys","tagName","toLowerCase","defaults"],"mappings":"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","file":"typed.min.js","sourcesContent":["/*!\n * \n *   typed.js - A jQuery typing animation script\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.0\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory(require(\"lodash\"));\n\telse\n\t\troot[\"Typed\"] = factory(root[\"_\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _lodash = __webpack_require__(1);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _optionalsJs = __webpack_require__(2);\n\t\n\tvar _optionalsJs2 = _interopRequireDefault(_optionalsJs);\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    var self = this;\n\t    // chosen element to manipulate text\n\t    this.el = document.getElementById(elementId);\n\t    // div containing strings\n\t    this.stringsElement = document.getElementById(options.stringsElement);\n\t    // Set remaining options\n\t    new _optionalsJs2['default'](this, options);\n\t    // All systems go!\n\t    this.build();\n\t  }\n\t\n\t  _createClass(Typed, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      // begin the loop w/ first current string (global self.strings)\n\t      // current string will be passed as an argument each time after this\n\t      var self = this;\n\t      self.timeout = setTimeout(function () {\n\t        for (var i = 0; i < self.strings.length; ++i) self.sequence[i] = i;\n\t\n\t        // shuffle the array if true\n\t        if (self.shuffle) self.sequence = self.shuffleArray(self.sequence);\n\t\n\t        var elContent;\n\t        if (self.isInput) {\n\t          elContent = self.el.value;\n\t        } else if (self.contentType === 'html') {\n\t          elContent = self.el.innerHTML;\n\t        } else {\n\t          elContent = self.el.textContent;\n\t        }\n\t        // Start typing\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (elContent.length == 0) {\n\t          self.typewrite(self.strings[self.sequence[self.arrayPos]], self.strPos);\n\t        } else {\n\t          self.backspace(elContent, elContent.length);\n\t        }\n\t      }, self.startDelay);\n\t    }\n\t  }, {\n\t    key: 'build',\n\t    value: function build() {\n\t      var self = this;\n\t      // Insert cursor\n\t      if (this.showCursor === true) {\n\t        this.cursor = document.createElement('span');\n\t        this.cursor.className = 'typed-cursor';\n\t        this.cursor.innerHTML = this.cursorChar;\n\t        this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t      }\n\t      if (this.stringsElement) {\n\t        this.strings = [];\n\t        this.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(this.stringsElement.children);\n\t        strings.forEach(function (stringElement) {\n\t          self.strings.push(stringElement.innerHTML);\n\t        });\n\t      }\n\t      this.init();\n\t    }\n\t\n\t    // pass current string state to each function, types 1 char per call\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      // exit when stopped\n\t      if (this.stop === true) {\n\t        return;\n\t      }\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      // varying values for setTimeout during typing\n\t      // can't be global since number changes each time loop is executed\n\t      var humanize = Math.round(Math.random() * (100 - 30)) + this.typeSpeed;\n\t      var self = this;\n\t\n\t      // ------------- optional ------------- //\n\t      // backpaces a certain string faster\n\t      // ------------------------------------ //\n\t      // if (self.arrayPos == 1){\n\t      //  self.backDelay = 50;\n\t      // }\n\t      // else{ self.backDelay = 500; }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      self.timeout = setTimeout(function () {\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        var charPause = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        if (substr.charAt(0) === '^') {\n\t          var skip = 1; // skip atleast 1\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            charPause = parseInt(substr);\n\t          }\n\t\n\t          // strip out the escape character and pause value so they're not printed\n\t          curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t        }\n\t\n\t        if (self.contentType === 'html') {\n\t          // skip over html tags while typing\n\t          var curChar = curString.substr(curStrPos).charAt(0);\n\t          if (curChar === '<' || curChar === '&') {\n\t            var tag = '';\n\t            var endTag = '';\n\t            if (curChar === '<') {\n\t              endTag = '>';\n\t            } else {\n\t              endTag = ';';\n\t            }\n\t            while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t              tag += curString.substr(curStrPos).charAt(0);\n\t              curStrPos++;\n\t              if (curStrPos + 1 > curString.length) {\n\t                break;\n\t              }\n\t            }\n\t            curStrPos++;\n\t            tag += endTag;\n\t          }\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        self.timeout = setTimeout(function () {\n\t          if (curStrPos === curString.length) {\n\t            // fires callback function\n\t            self.options.onStringTyped(self.arrayPos);\n\t\n\t            // is this the final string\n\t            if (self.arrayPos === self.strings.length - 1) {\n\t              // animation that occurs on the last typed string\n\t              self.options.callback();\n\t\n\t              self.curLoop++;\n\t\n\t              // quit if we wont loop back\n\t              if (self.loop === false || self.curLoop === self.loopCount) return;\n\t            }\n\t\n\t            self.timeout = setTimeout(function () {\n\t              self.backspace(curString, curStrPos);\n\t            }, self.backDelay);\n\t          } else {\n\t\n\t            /* call before functions if applicable */\n\t            if (curStrPos === 0) {\n\t              self.options.preStringTyped(self.arrayPos);\n\t            }\n\t\n\t            // start typing each new char into existing string\n\t            // curString: arg, self.el.html: original text inside element\n\t            var nextString = curString.substr(0, curStrPos + 1);\n\t            if (self.attr) {\n\t              self.el.setAttribute(self.attr, nextString);\n\t            } else {\n\t              if (self.isInput) {\n\t                self.el.value = nextString;\n\t              } else if (self.contentType === 'html') {\n\t                self.el.innerHTML = nextString;\n\t              } else {\n\t                self.el.textContent = nextString;\n\t              }\n\t            }\n\t\n\t            // add characters one by one\n\t            curStrPos++;\n\t            // loop the function\n\t            self.typewrite(curString, curStrPos);\n\t          }\n\t          // end of character pause\n\t        }, charPause);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var self = this;\n\t      // exit when stopped\n\t      if (this.stop === true) {\n\t        return;\n\t      }\n\t\n\t      if (this.fadeOut) {\n\t        this.initFadeOut();\n\t        return;\n\t      }\n\t\n\t      // varying values for setTimeout during typing\n\t      // can't be global since number changes each time loop is executed\n\t      var humanize = Math.round(Math.random() * (100 - 30)) + this.backSpeed;\n\t\n\t      self.timeout = setTimeout(function () {\n\t\n\t        // ----- this part is optional ----- //\n\t        // check string array position\n\t        // on the first string, only delete one word\n\t        // the stopNum actually represents the amount of chars to\n\t        // keep in the current string. In my case it's 14.\n\t        // if (self.arrayPos == 1){\n\t        //  self.stopNum = 14;\n\t        // }\n\t        //every other time, delete the whole typed string\n\t        // else{\n\t        //  self.stopNum = 0;\n\t        // }\n\t\n\t        if (self.contentType === 'html') {\n\t          // skip over html tags while backspacing\n\t          if (curString.substr(curStrPos).charAt(0) === '>') {\n\t            var tag = '';\n\t            while (curString.substr(curStrPos - 1).charAt(0) !== '<') {\n\t              tag -= curString.substr(curStrPos).charAt(0);\n\t              curStrPos--;\n\t              if (curStrPos < 0) {\n\t                break;\n\t              }\n\t            }\n\t            curStrPos--;\n\t            tag += '<';\n\t          }\n\t        }\n\t\n\t        // ----- continue important stuff ----- //\n\t        // replace text with base text + typed characters\n\t        var nextString = curString.substr(0, curStrPos);\n\t        self.replaceText(nextString);\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > self.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          self.backspace(curString, curStrPos);\n\t        }\n\t        // if the stop number has been reached, increase\n\t        // array position to next string\n\t        else if (curStrPos <= self.stopNum) {\n\t            self.arrayPos++;\n\t\n\t            if (self.arrayPos === self.strings.length) {\n\t              self.arrayPos = 0;\n\t\n\t              // Shuffle sequence again\n\t              if (self.shuffle) self.sequence = self.shuffleArray(self.sequence);\n\t\n\t              self.init();\n\t            } else self.typewrite(self.strings[self.sequence[self.arrayPos]], curStrPos);\n\t          }\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    // Adds a CSS class to fade out current string\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      self = this;\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        self.arrayPos++;\n\t        self.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (self.strings.length > self.arrayPos) {\n\t          self.typewrite(self.strings[self.sequence[self.arrayPos]], 0);\n\t        } else {\n\t          self.typewrite(self.strings[0], 0);\n\t          self.arrayPos = 0;\n\t        }\n\t      }, self.fadeOutDelay);\n\t    }\n\t\n\t    // Replaces current text in the HTML element\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Shuffles the numbers in the given array.\n\t  }, {\n\t    key: 'shuffleArray',\n\t    value: function shuffleArray(array) {\n\t      var tmp,\n\t          current,\n\t          top = array.length;\n\t      if (top) while (--top) {\n\t        current = Math.floor(Math.random() * (top + 1));\n\t        tmp = array[current];\n\t        array[current] = array[top];\n\t        array[top] = tmp;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    // Reset and rebuild the element\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var self = this;\n\t      clearInterval(self.timeout);\n\t      var id = this.el.getAttribute('id');\n\t      this.el.textContent = '';\n\t      if (typeof this.cursor !== 'undefined' && typeof this.cursor.parentNode !== 'undefined') {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      // Send the callback\n\t      this.options.resetCallback();\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(3);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\tvar Optionals = function Optionals(self, options) {\n\t  _classCallCheck(this, Optionals);\n\t\n\t  // options\n\t  self.options = {};\n\t  Object.keys(_defaultsJs2['default']).forEach(function (key) {\n\t    self.options[key] = _defaultsJs2['default'][key];\n\t  });\n\t  Object.keys(options).forEach(function (key) {\n\t    self.options[key] = options[key];\n\t  });\n\t\n\t  // attribute to type into\n\t  self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t  self.attr = self.options.attr;\n\t\n\t  // show cursor\n\t  self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t  // text content of element\n\t  self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t  // html or plain text\n\t  self.contentType = self.options.contentType;\n\t\n\t  // typing speed\n\t  self.typeSpeed = self.options.typeSpeed;\n\t\n\t  // add a delay before typing starts\n\t  self.startDelay = self.options.startDelay;\n\t\n\t  // backspacing speed\n\t  self.backSpeed = self.options.backSpeed;\n\t\n\t  // amount of time to wait before backspacing\n\t  self.backDelay = self.options.backDelay;\n\t\n\t  // Fade out instead of backspace\n\t  self.fadeOut = self.options.fadeOut;\n\t  self.fadeOutClass = self.options.fadeOutClass;\n\t  self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t  // input strings of text\n\t  self.strings = self.options.strings;\n\t\n\t  // character number position of current string\n\t  self.strPos = 0;\n\t\n\t  // current array position\n\t  self.arrayPos = 0;\n\t\n\t  // number to stop backspacing on.\n\t  // default 0, can change depending on how many chars\n\t  // you want to remove at the time\n\t  self.stopNum = 0;\n\t\n\t  // Looping logic\n\t  self.loop = self.options.loop;\n\t  self.loopCount = self.options.loopCount;\n\t  self.curLoop = 0;\n\t\n\t  // for stopping\n\t  self.stop = false;\n\t\n\t  // custom cursor\n\t  self.cursorChar = self.options.cursorChar;\n\t\n\t  // shuffle the strings\n\t  self.shuffle = self.options.shuffle;\n\t  // the order of strings\n\t  self.sequence = [];\n\t};\n\t\n\texports['default'] = Optionals;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  strings: [\"These are the default values...\", \"You know what you should do?\", \"Use your own!\", \"Have a great day!\"],\n\t  stringsElement: null,\n\t  // typing speed\n\t  typeSpeed: 0,\n\t  // time before typing starts\n\t  startDelay: 0,\n\t  // backspacing speed\n\t  backSpeed: 0,\n\t  // shuffle the strings\n\t  shuffle: false,\n\t  // time before backspacing\n\t  backDelay: 500,\n\t  // Fade out instead of backspace\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500, // milliseconds\n\t  // loop\n\t  loop: false,\n\t  // false = infinite\n\t  loopCount: false,\n\t  // show cursor\n\t  showCursor: true,\n\t  // character for cursor\n\t  cursorChar: \"|\",\n\t  // attribute to type (null == text)\n\t  attr: null,\n\t  // either html or text\n\t  contentType: 'html',\n\t  // call when done callback function\n\t  callback: function callback() {},\n\t  // starting callback function before each string\n\t  preStringTyped: function preStringTyped() {},\n\t  //callback for every typed string\n\t  onStringTyped: function onStringTyped() {},\n\t  // callback for reset\n\t  resetCallback: function resetCallback() {}\n\t};\n\t\n\texports[\"default\"] = defaults;\n\tmodule.exports = exports[\"default\"];\n\n/***/ })\n/******/ ])\n});\n;"]}