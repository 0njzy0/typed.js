{"version":3,"sources":["typed.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_initializerJs","_initializerJs2","_htmlParserJs","Typed","elementId","options","begin","self","typingComplete","shuffleStringsIfNeeded","insertCursor","timeout","setTimeout","currentElContent","typewrite","strings","sequence","arrayPos","strPos","backspace","startDelay","curString","curStrPos","isTyping","pause","fadeOut","el","classList","contains","fadeOutClass","remove","cursor","humanize","humanizer","typeSpeed","status","setPauseStatus","pauseTime","substr","charAt","skip","test","exec","parseInt","toggleBlinking","substring","htmlParser","typeHtmlChars","doneTyping","keepTyping","preStringTyped","nextString","replaceText","onStringTyped","complete","loop","curLoop","loopCount","backDelay","initFadeOut","backSpeed","curStopNum","stopNums","backSpaceHtmlChars","onComplete","blinking","cursorBlinking","style","animationIterationCount","speed","Math","round","random","shuffle","sort","className","fadeOutDelay","str","attr","setAttribute","isInput","contentType","innerHTML","textContent","showCursor","document","createElement","cursorChar","parentNode","insertBefore","nextSibling","start","stop","onStop","onStart","reset","onDestroy","restart","arguments","undefined","clearInterval","removeChild","onReset","_defaultsJs","_defaultsJs2","Initializer","getElementById","keys","forEach","tagName","toLowerCase","elContent","getAttribute","stringsElement","display","Array","slice","apply","children","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","s","push","err","setStopNums","getCurrentElContent","string","newStopNum","split","regex","replace","defaults","Infinity","HTMLParser","curChar","tag","endTag"],"mappings":"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","file":"typed.min.js","sourcesContent":["/*!\n * \n *   typed.js - A jQuery typing animation script\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.0\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _initializerJs2 = _interopRequireDefault(_initializerJs);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    new _initializerJs2['default'](this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  _createClass(Typed, [{\n\t    key: 'begin',\n\t    value: function begin() {\n\t      // begin the loop w/ first current string (global self.strings)\n\t      // current string will be passed as an argument each time after this\n\t      var self = this;\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(self);\n\t      this.insertCursor();\n\t      self.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (self.currentElContent.length == 0) {\n\t          self.typewrite(self.strings[self.sequence[self.arrayPos]], self.strPos);\n\t        } else {\n\t          // Start typing\n\t          self.backspace(self.currentElContent, self.currentElContent.length);\n\t        }\n\t      }, self.startDelay);\n\t    }\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    // pass current string state to each function, types 1 char per call\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var self = this;\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t\n\t      if (self.pause.status === true) {\n\t        self.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      self.timeout = setTimeout(function () {\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        if (substr.charAt(0) === '^') {\n\t          var skip = 1; // skip atleast 1\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t          }\n\t          self.toggleBlinking(true);\n\t\n\t          // strip out the escape character and pause value so they're not printed\n\t          curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t        }\n\t\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, self);\n\t\n\t        // timeout for any pause after a character\n\t        self.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          self.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos === curString.length) {\n\t            self.doneTyping(curString, curStrPos);\n\t          } else {\n\t            self.keepTyping(curString, curStrPos);\n\t          }\n\t          // end of character pause\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      var nextString = curString.substr(0, curStrPos + 1);\n\t      this.replaceText(nextString);\n\t      // add characters one by one\n\t      curStrPos++;\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var self = this;\n\t      // fires callback function\n\t      self.options.onStringTyped(self.arrayPos);\n\t      self.toggleBlinking(true);\n\t      // is this the final string\n\t      if (self.arrayPos === self.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        self.complete();\n\t        // quit if we wont loop back\n\t        if (self.loop === false || self.curLoop === self.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      self.timeout = setTimeout(function () {\n\t        self.backspace(curString, curStrPos);\n\t      }, self.backDelay);\n\t    }\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var self = this;\n\t      if (self.pause.status === true) {\n\t        self.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      self.timeout = setTimeout(function () {\n\t        var curStopNum = self.stopNums[self.arrayPos];\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, self);\n\t        // replace text with base text + typed characters\n\t        var nextString = curString.substr(0, curStrPos);\n\t        self.replaceText(nextString);\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > curStopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          self.backspace(curString, curStrPos);\n\t        }\n\t        // if the stop number has been reached, increase\n\t        // array position to next string\n\t        else if (curStrPos <= curStopNum) {\n\t            self.arrayPos++;\n\t            if (self.arrayPos === self.strings.length) {\n\t              self.arrayPos = 0;\n\t              self.shuffleStringsIfNeeded();\n\t              self.begin();\n\t            } else {\n\t              self.typewrite(self.strings[self.sequence[self.arrayPos]], curStrPos);\n\t            }\n\t          }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete();\n\t      this.curLoop++;\n\t      this.typingComplete = true;\n\t    }\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(blinking) {\n\t      // if already paused, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === blinking) return;\n\t      this.cursorBlinking = blinking;\n\t      var status = blinking ? 'infinite' : 0;\n\t      this.cursor.style.animationIterationCount = status;\n\t    }\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      // varying values for setTimeout during typing\n\t      return Math.round(Math.random() * (100 - 30)) + speed;\n\t    }\n\t\n\t    // Shuffles the numbers in the given array.\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    // Adds a CSS class to fade out current string\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var self = this;\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        self.arrayPos++;\n\t        self.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (self.strings.length > self.arrayPos) {\n\t          self.typewrite(self.strings[self.sequence[self.arrayPos]], 0);\n\t        } else {\n\t          self.typewrite(self.strings[0], 0);\n\t          self.arrayPos = 0;\n\t        }\n\t      }, self.fadeOutDelay);\n\t    }\n\t\n\t    // Replaces current text in the HTML element\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      // Insert cursor\n\t      if (!this.showCursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }, {\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      if (this.pause.status) {\n\t        this.start();\n\t      } else {\n\t        this.stop();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop();\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart();\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy();\n\t    }\n\t\n\t    // Reset and rebuild the element\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (typeof this.cursor !== 'undefined' && typeof this.cursor.parentNode !== 'undefined') {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.options.onReset();\n\t        this.begin();\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\tvar Initializer = (function () {\n\t  function Initializer(self, options, elementId) {\n\t    _classCallCheck(this, Initializer);\n\t\n\t    // chosen element to manipulate text\n\t    self.el = document.getElementById(elementId);\n\t\n\t    self.options = {};\n\t    Object.keys(_defaultsJs2['default']).forEach(function (key) {\n\t      self.options[key] = _defaultsJs2['default'][key];\n\t    });\n\t    Object.keys(options).forEach(function (key) {\n\t      self.options[key] = options[key];\n\t    });\n\t\n\t    // attribute to type into\n\t    self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t    self.attr = self.options.attr;\n\t\n\t    // show cursor\n\t    self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t    // custom cursor\n\t    self.cursorChar = self.options.cursorChar;\n\t\n\t    // Is the cursor blinking\n\t    self.cursorBlinking = true;\n\t\n\t    // text content of element\n\t    self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t    // html or plain text\n\t    self.contentType = self.options.contentType;\n\t\n\t    // typing speed\n\t    self.typeSpeed = self.options.typeSpeed;\n\t\n\t    // add a delay before typing starts\n\t    self.startDelay = self.options.startDelay;\n\t\n\t    // backspacing speed\n\t    self.backSpeed = self.options.backSpeed;\n\t\n\t    // amount of time to wait before backspacing\n\t    self.backDelay = self.options.backDelay;\n\t\n\t    // Fade out instead of backspace\n\t    self.fadeOut = self.options.fadeOut;\n\t    self.fadeOutClass = self.options.fadeOutClass;\n\t    self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t    // input strings of text\n\t    self.strings = self.options.strings;\n\t\n\t    // character number position of current string\n\t    self.strPos = 0;\n\t\n\t    // current array position\n\t    self.arrayPos = 0;\n\t\n\t    // number to stop backspacing on.\n\t    // default 0, can change depending on how many chars\n\t    // you want to remove at the time\n\t    self.stopNums = [];\n\t\n\t    // Looping logic\n\t    self.loop = self.options.loop;\n\t    self.loopCount = self.options.loopCount;\n\t    self.curLoop = 0;\n\t\n\t    // shuffle the strings\n\t    self.shuffle = self.options.shuffle;\n\t    // the order of strings\n\t    self.sequence = [];\n\t\n\t    self.pause = {\n\t      status: false,\n\t      typewrite: true,\n\t      curString: '',\n\t      curStrPos: 0\n\t    };\n\t\n\t    // When the typing is complete (when not looped)\n\t    self.typingComplete = false;\n\t\n\t    // div containing strings\n\t    self.stringsElement = document.getElementById(self.options.stringsElement);\n\t\n\t    if (self.stringsElement) {\n\t      self.strings = [];\n\t      self.stringsElement.style.display = 'none';\n\t      var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = strings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var s = _step.value;\n\t\n\t          self.strings.push(s.innerHTML);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator['return']) {\n\t            _iterator['return']();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // Set the order in which the strings are typed\n\t    for (var i in self.strings) {\n\t      self.sequence[i] = i;\n\t    }\n\t\n\t    // Using the `~12` syntax, set each string's stop number\n\t    // (stops backspacing at a certain digit)\n\t    this.setStopNums(self);\n\t\n\t    // If there is some text in the element\n\t    self.currentElContent = this.getCurrentElContent(self);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'setStopNums',\n\t    value: function setStopNums(self) {\n\t      for (var s in self.strings) {\n\t        var string = self.strings[s];\n\t        var newStopNum = string.split('~')[1];\n\t        if (newStopNum && newStopNum > 0) {\n\t          var regex = /~(\\d+)/g;\n\t          self.strings[s] = string.replace(regex, '');\n\t          self.stopNums.push(parseInt(newStopNum));\n\t        } else {\n\t          self.stopNums.push(0);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  strings: [\"These are the default values...\", \"You know what you should do?\", \"Use your own!\", \"Have a great day!\"],\n\t  stringsElement: null,\n\t  // typing speed\n\t  typeSpeed: 0,\n\t  // time before typing starts\n\t  startDelay: 0,\n\t  // backspacing speed\n\t  backSpeed: 0,\n\t  // shuffle the strings\n\t  shuffle: false,\n\t  // time before backspacing\n\t  backDelay: 500,\n\t  // Fade out instead of backspace\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500, // milliseconds\n\t  // loop\n\t  loop: false,\n\t  loopCount: Infinity,\n\t  // show cursor\n\t  showCursor: true,\n\t  // character for cursor\n\t  cursorChar: \"|\",\n\t  // attribute to type (null == text)\n\t  attr: null,\n\t  // either html or text\n\t  contentType: 'html',\n\t  // call when done callback function\n\t  onComplete: function onComplete() {},\n\t  // starting callback function before each string\n\t  preStringTyped: function preStringTyped() {},\n\t  //callback for every typed string\n\t  onStringTyped: function onStringTyped() {},\n\t  // callbacks for pause / play / reset / destroy\n\t  onReset: function onReset() {},\n\t  onStop: function onStop() {},\n\t  onStart: function onStart() {},\n\t  onDestroy: function onDestroy() {}\n\t};\n\t\n\texports[\"default\"] = defaults;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      // skip over html tags while typing\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var tag = '';\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          tag += curString.substr(curStrPos).charAt(0);\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      // skip over html tags while backspacing\n\t      if (curString.substr(curStrPos).charAt(0) === '>') {\n\t        var tag = '';\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== '<') {\n\t          tag -= curString.substr(curStrPos).charAt(0);\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t        tag += '<';\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;"]}